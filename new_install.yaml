---
- hosts: all
  remote_user: root
  tasks:
  #
  # Set old 'yum groups' behavior
  # Fix expiration time settings
  #
  - ini_file: dest=/etc/yum.conf section=main option=group_command value=compat
  - ini_file: dest=/etc/yum.conf section=main option=metadata_expire value=6h
  - ini_file: dest=/etc/yum.conf section=main option=metadata_expire_filter value=never
  - ini_file: dest=/etc/yum.conf section=main option=mirrorlist_expire value=6h
  - ini_file: dest=/etc/yum.conf section=main option=check_config_file_age value=0

  #
  # Set swappiness to reasonable value
  #
  - sysctl: name=vm.swappiness value=5 state=present

  #
  # Boot menu waits only 1s
  #
  - lineinfile: dest=/etc/sysconfig/grub regexp=^GRUB_TIMEOUT= line=GRUB_TIMEOUT=1

  #
  # Install necessary packages
  #
  - shell: rpm -q rpmfusion-free-release-20
    register: result
    ignore_errors: True
    when: ansible_distribution_major_version == "20"
    changed_when: "result.rc != 0"
  - yum: name=http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-20.noarch.rpm state=present
    when: ansible_distribution_major_version == "20" and result|failed
  - shell: rpm -q rpmfusion-free-release-21
    register: result
    ignore_errors: True
    when: ansible_distribution_major_version == "21"
    changed_when: "result.rc != 0"
  - yum: name=http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-21.noarch.rpm state=present
    when: ansible_distribution_major_version == "21" and result|failed
  - yum: name={{ item }} state=absent
    with_items: [prelink, lightspark, gnash]
  - shell: rpm -q adobe-release-x86_64
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - yum: name=http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm state=present
    when: result|failed
  - shell: rpm -q skype
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - yum: name=http://download.skype.com/linux/skype-4.3.0.37-fedora.i586.rpm state=present
    when: result|failed
  - shell: rpm -q google-chrome-stable
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - yum: name=https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm state=present
    when: result|failed
  - shell: rpm -q 'gpg-pubkey-7fac5991'
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - shell: rpm --import https://dl-ssl.google.com/linux/linux_signing_key.pub
    when: result|failed
  - shell: rpm -q google-talkplugin
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - yum: name=https://dl.google.com/linux/direct/google-talkplugin_current_x86_64.rpm state=present
    when: result|failed
  - yum: name={{ item }} state=present
    with_items: [yum-utils, yum-langpacks, mplayer, mencoder, vlc, gstreamer1-libav,
      gstreamer-ffmpeg, "@printing", flash-plugin, "@multimedia", "@libreoffice",
      "@gnome-desktop", tuned, htop, python-tools, kate, kate-pate, terminator,
      gnome-tweak-tool, vim-enhanced, mc, lftp, nano, wget, curl, meld, freemind,
      gimp, keepassx, bash-completion, git, screen, krb5-workstation, krb5-auth-dialog,
      sdparm, hdparm, smartmontools, lm_sensors, fuse-sshfs, curl, cabextract,
      xorg-x11-font-utils, fontconfig, "@development-tools"]

  #
  # Install MS fonts
  #
  - shell: rpm -q msttcore-fonts-installer
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - yum: name=https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm state=present
    when: result|failed

  #
  # Install languages
  #
  - shell: yum langlist | grep Czech
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - shell: yum langinstall Czech -y
    when: result|failed
  - shell: yum langlist | grep English
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - shell: yum langinstall English -y
    when: result|failed

  #
  # Configure power saving
  #
  - service: name=tuned state=started enabled=yes
  - shell: tuned-adm active | grep powersave
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - shell: tuned-adm profile powersave
    when: result|failed

  #
  # Check if var_user is valid
  #
  - shell: ls -d /home/{{ var_user }}
    changed_when: "result.rc != 0"

  #
  # Setup mplayer
  #
  - file: dest={{ item }}/.mplayer state=directory mode=755
    with_items: [/root, "/home/{{ var_user }}"]
  - copy: src=configs/mplayer.config dest={{ item }}/.mplayer/config mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup ssh
  #
  - file: dest={{ item }}/.ssh state=directory mode=700
    with_items: [/root, "/home/{{ var_user }}"]
  - copy: src=configs/ssh.config dest={{ item }}/.ssh/config mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup vim
  #
  - copy: src=configs/vimrc dest={{ item }}/.vimrc mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup bash prompt
  #
  - copy: src=configs/bashrc.ps1.sh dest={{ item }}/.bashrc.ps1.sh mode=755
    with_items: [/root, "/home/{{ var_user }}"]
  - lineinfile: dest="{{ item }}/.bashrc" line="source ~/.bashrc.ps1.sh"
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup screen
  #
  - copy: src=configs/screenrc dest={{ item }}/.screenrc mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup dnsmasq
  #
  - copy: src=configs/dnsmasq.conf dest=/etc/dnsmasq.conf mode=644
  - copy: src=configs/resolv.dnsmasq dest=/etc/resolv.dnsmasq mode=644
  - service: name=dnsmasq state=started enabled=yes



