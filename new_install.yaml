---
- hosts: all
  remote_user: root
  tasks:
  #
  # Set old 'yum groups' behavior
  # Fix expiration time settings
  #
  - name: Set old 'yum groups' behavior, Fix expiration time settings
    ini_file: dest=/etc/yum.conf section=main option=group_command value=compat
    ini_file: dest=/etc/yum.conf section=main option=metadata_expire value=6h
    ini_file: dest=/etc/yum.conf section=main option=metadata_expire_filter value=never
    ini_file: dest=/etc/yum.conf section=main option=mirrorlist_expire value=6h
    ini_file: dest=/etc/yum.conf section=main option=check_config_file_age value=0

  #
  # Set swappiness to reasonable value
  #
  - name: Set swappiness to reasonable value
    sysctl: name=vm.swappiness value=5 state=present

  #
  # Boot menu waits only 1s
  #
  - name: Boot menu waits only 1s
    lineinfile: dest=/etc/sysconfig/grub regexp=^GRUB_TIMEOUT= line=GRUB_TIMEOUT=1

  #
  # Install necessary packages
  #
  - name: Check rpmfusion-free
    shell: rpm -q rpmfusion-free-release-21
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Install rpmfusion-free
    yum: name=http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-21.noarch.rpm state=present
    when: result|failed
  - name: Check adobe-release
    shell: rpm -q adobe-release-x86_64
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Install adobe-release
    yum: name=http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm state=present
    when: result|failed
  - name: Check skype
    shell: rpm -q skype
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Install skype
    yum: name=http://download.skype.com/linux/skype-4.3.0.37-fedora.i586.rpm state=present
    when: result|failed
  - name: Check google-chrome
    shell: rpm -q google-chrome-stable
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Install google-chrome
    yum: name=https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm state=present
    when: result|failed
  - name: Check google-talkplugin
    shell: rpm -q google-talkplugin
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Install google-talkplugin
    yum: name=https://dl.google.com/linux/direct/google-talkplugin_current_x86_64.rpm state=present
    when: result|failed
  - name: Install packages
    yum: name={{ item }} state=absent
    with_items:
    - gnash
    - lightspark
    - prelink
    yum: name='*' state=latest
    yum: name={{ item }} state=present
    with_items:
    - "@development-tools"
    - "@gnome-desktop"
    - "@libreoffice"
    - "@multimedia"
    - "@printing"
    - bash-completion
    - cabextract
    - curl
    - flash-plugin
    - fontconfig
    - freemind
    - fuse-sshfs
    - ghostscript
    - gimp
    - git
    - gnome-tweak-tool
    - gstreamer-ffmpeg
    - gstreamer1-libav
    - hdparm
    - htop
    - kate
    - kate-pate
    - keepassx
    - krb5-auth-dialog
    - krb5-workstation
    - lftp
    - lm_sensors
    - mc
    - mencoder
    - meld
    - mplayer
    - nano
    - poppler
    - psutils
    - python-tools
    - screen
    - sdparm
    - smartmontools
    - terminator
    - tuned
    - vim-enhanced
    - wget
    - vlc
    - xorg-x11-font-utils
    - yum-langpacks
    - yum-utils

  #
  # Install MS fonts
  #
  - name: Check msttcore-fonts
    shell: rpm -q msttcore-fonts-installer
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Install msttcore-fonts
    yum: name=https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm state=present
    when: result|failed

  #
  # Install languages
  #
  - name: Check Czech
    shell: yum langlist | grep Czech
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Install Czech
    shell: yum langinstall Czech -y
    when: result|failed
  - name: Check English
    shell: yum langlist | grep English
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Install English
    shell: yum langinstall English -y
    when: result|failed

  #
  # Configure power saving
  #
  - name: Start tuned
    service: name=tuned state=started enabled=yes
  - name: Check profile
    shell: tuned-adm active | grep desktop
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Set profile
    shell: tuned-adm profile desktop
    when: result|failed

  #
  # Check if var_user is valid
  #
  - name: Check if username is valid
    shell: ls -d /home/{{ var_user }}
    changed_when: "result.rc != 0"

  #
  # Setup mplayer
  #
  - file: dest={{ item }}/.mplayer state=directory mode=755
    with_items: [/root, "/home/{{ var_user }}"]
  - copy: src=configs/mplayer.config dest={{ item }}/.mplayer/config mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup ssh
  #
  - file: dest={{ item }}/.ssh state=directory mode=700
    with_items: [/root, "/home/{{ var_user }}"]
  - copy: src=configs/ssh.config dest={{ item }}/.ssh/config mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup vim
  #
  - copy: src=configs/vimrc dest={{ item }}/.vimrc mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup bash prompt
  #
  - copy: src=configs/bashrc.ps1.sh dest={{ item }}/.bashrc.ps1.sh mode=755
    with_items: [/root, "/home/{{ var_user }}"]
  - lineinfile: dest="{{ item }}/.bashrc" line="source ~/.bashrc.ps1.sh"
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup screen
  #
  - copy: src=configs/screenrc dest={{ item }}/.screenrc mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup dnsmasq
  #
  - copy: src=configs/dnsmasq.conf dest=/etc/dnsmasq.conf mode=644
  - copy: src=configs/resolv.dnsmasq dest=/etc/resolv.dnsmasq mode=644
  - service: name=dnsmasq state=started enabled=yes



